{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Section","title","children","className","FeedbackOptions","onLeaveFeedback","options","map","option","index","type","name","value","onClick","Notification","message","style","color","fontSize","Statistics","good","neutral","bad","countTotal","positivePercentage","total","positiveFeedbacks","s","statsList","statsItem","App","useState","goodFeedback","setGoodFeedback","neutralFeedback","setNeutralFeedback","badFeedback","setBadFeedback","countTotalFeedback","e","target","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,UAAY,gC,0ICCjE,SAASC,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,MAAMC,EAAW,EAAXA,SAC7B,OACE,0BAASC,UAAU,UAAnB,UACE,6BAAKF,IACJC,KCJA,IAAME,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QACjD,OACE,qBAAKH,UAAU,kBAAf,SACGG,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACX,uBACEN,UAAU,SACVO,KAAK,SACLC,KAAMH,EACNI,MAAOJ,EACPK,QAASR,GACJI,SCVR,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OACE,oBAAGZ,UAAU,kBAAkBa,MAAO,CAACC,MAAM,MAAOC,SAAU,IAA9D,cAAsEH,K,oBCAnE,SAASI,EAAT,GAA6E,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,IAAKC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,mBACrDC,EAAQF,IACRG,EAAoBF,IAM1B,OAAc,IAAVC,EAEA,qBAAItB,UAAWwB,IAAEC,UAAjB,UACE,qBAAIzB,UAAWwB,IAAEE,UAAjB,UACE,yCADF,IACqB,+BAAOT,OAE5B,qBAAIjB,UAAWwB,IAAEE,UAAjB,UACE,4CADF,IACwB,+BAAOR,OAE/B,qBAAIlB,UAAWwB,IAAEE,UAAjB,UACE,wCADF,IACoB,+BAAOP,OAE3B,qBAAInB,UAAWwB,IAAEE,UAAjB,UACE,0CADF,IACsB,+BAAOJ,OAE7B,qBAAItB,UAAWwB,IAAEE,UAAjB,UACE,sDADF,IACkC,iCAAOH,EAAP,aAKjC,cAACZ,EAAD,CAAcC,QAAQ,sB,MC4BhBe,MApDf,WACE,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8CF,mBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAoBMC,EAAqB,WACzB,OAAON,EAAeE,EAAkBE,GAO1C,OACE,sBAAKjC,UAAU,MAAf,UACE,cAACH,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAAS,CAAC,OAAQ,UAAW,OAC7BD,gBA/BY,SAAAkC,GAGlB,OAFaA,EAAEC,OAAO7B,MAGpB,IAAK,OACHsB,EAAgBD,EAAe,GAC/B,MACF,IAAK,UACHG,EAAmBD,EAAkB,GACrC,MACF,IAAK,MACHG,EAAeD,EAAc,GAC7B,MACF,QACE,aAoBF,cAACpC,EAAD,CAASC,MAAM,aAAf,SACE,cAACkB,EAAD,CACEhB,UAAU,aACViB,KAAMY,EACNX,QAASa,EACTZ,IAAKc,EACLb,WAAYe,EACZd,mBAnBgC,WACtC,OAAOiB,KAAKC,MAAOV,EAAeM,IAAwB,cChC9DK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6afda785.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsList\":\"Statistics_statsList__26W4x\",\"statsItem\":\"Statistics_statsItem__N5Jpk\"};","import PropTypes from 'prop-types';\r\n\r\nexport function Section({title,children}) {\r\n  return (\r\n    <section className=\"section\">\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};","import PropTypes from \"prop-types\";\n\nexport const FeedbackOptions = ({ onLeaveFeedback, options }) => {\n  return (\n    <div className=\"feedbackOptions\">\n      {options.map((option, index) => (\n        <input\n          className=\"button\"\n          type=\"button\"\n          name={option}\n          value={option}\n          onClick={onLeaveFeedback}\n          key={index}\n        />\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n","import PropTypes from 'prop-types';\r\n\r\nexport function Notification({ message }) {\r\n  return (\r\n    <p className=\"s.notifyMessage\" style={{color:\"red\", fontSize: 24}}> { message }</p>  \r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired\r\n}","import PropTypes from \"prop-types\";\nimport { Notification } from \"../Notification/Notification\";\n\nimport s from \"./Statistics.module.css\";\nexport function Statistics({ good, neutral, bad, countTotal, positivePercentage }) {\n  const total = countTotal();\n  const positiveFeedbacks = positivePercentage();\n  // const countPositiveFeedbackPercentage = () => {\n  //   // const totalFeedback = this.countTotalFeedback();\n  //   return Math.round((good / total) * 100);\n  // }\n\n  if (total !== 0) {\n    return (\n      <ul className={s.statsList}>\n        <li className={s.statsItem}>\n          <span>Good:</span> <span>{good}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span>Neutral:</span> <span>{neutral}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span>Bad:</span> <span>{bad}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span>Total:</span> <span>{total}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span>Positive Feedback:</span> <span>{positiveFeedbacks}%</span>\n        </li>\n      </ul>\n    );\n  }\n  return <Notification message=\"No feedback given\" />;\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  countTotal: PropTypes.func.isRequired,\n  positivePercentage: PropTypes.func.isRequired,\n};\n","// import { Component } from \"react\";\nimport { useState } from 'react';\n\nimport { Section } from '../Section/Section';\nimport { FeedbackOptions } from '../FeedbackOptions/FeedbackOptions';\nimport { Statistics } from '../Statistics/Statistics';\n\nimport './App.css';\n\nfunction App() {\n  const [goodFeedback, setGoodFeedback] = useState(0);\n  const [neutralFeedback, setNeutralFeedback] = useState(0);\n  const [badFeedback, setBadFeedback] = useState(0);\n\n  const handleClick = e => {\n    const name = e.target.name;\n\n    switch (name) {\n      case 'good':\n        setGoodFeedback(goodFeedback + 1);\n        break;\n      case 'neutral':\n        setNeutralFeedback(neutralFeedback + 1);\n        break;\n      case 'bad':\n        setBadFeedback(badFeedback + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return goodFeedback + neutralFeedback + badFeedback;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((goodFeedback / countTotalFeedback()) * 100);\n  };\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={handleClick}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          className=\"statistics\"\n          good={goodFeedback}\n          neutral={neutralFeedback}\n          bad={badFeedback}\n          countTotal={countTotalFeedback}\n          positivePercentage={countPositiveFeedbackPercentage}\n        />\n      </Section>\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}